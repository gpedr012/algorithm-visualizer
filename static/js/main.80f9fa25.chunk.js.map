{"version":3,"sources":["components/SortVisualization/SortActionMenuItems/SortActionMenuItems.module.css","components/Sidebar/Sidebar.module.css","components/SortVisualization/Bar/Bar.module.css","App.module.css","components/MainContent/MainContent.module.css","components/SortVisualization/SortVisualization.module.css","components/ActionMenu/ActionMenu.module.css","components/Sidebar/Backdrop/Backdrop.module.css","components/SortVisualization/Bar/Bar.js","util/sortingStates.js","util/sorter.js","util/utils.js","components/ActionMenu/ActionMenu.js","components/SortVisualization/SortActionMenuItems/SortActionMenuItems.js","components/SortVisualization/SortVisualization.js","components/MainContent/MainContent.js","components/Sidebar/Backdrop/Backdrop.js","components/Sidebar/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Bar","props","console","log","slimMode","barState","numberContainer","className","classes","number","height","content","toLowerCase","style","IDLE","COMPARE","QKS_SET_PIVOT","QKS_UNSET_PIVOT","QKS_LIMITS","MGS_REPLACE","SWAP_INIT","SWAP_END","FINAL_POS","quickSortEntry","array","lowPtr","highPtr","actions","pivotIdx","partitionQkSort","push","createAction","pivot","num","i","j","swap","mergeSortEntry","lowIdx","highIdx","middleIdx","Math","floor","merge","tempArr","leftIdx","rightIdx","mainArrIdx","length","actionType","args","replacer","indexes","slice","idxOne","idxTwo","temp","createArrayOfBars","size","minV","maxV","customNums","arr","newArrayLength","createBar","random","randNum","algorithms","BUBBLE","code","name","func","arrayCopy","SELECTION","minIdx","INSERTION","tempObj","QUICKSORT","MERGESORT","key","curState","revState","ActionMenu","children","MAXIMUM","SortActionMenuItems","useState","showingMain","setShowingMain","minInputVal","setMinInputVal","maxInputVal","setMaxInputVal","customArrItems","setCustomArrItems","errorMsg","setErrorMsg","handleInputChange","evt","val","target","value","type","t","f","mainContent","algorithm","btn","onClick","sort","onChange","handleSpeedChange","slider","step","min","max","animSpeed","createArraySubContent","divisor","htmlFor","bind","id","defaultValue","preventDefault","handleNewArray","error","splitItems","split","finalItems","forEach","item","Number","isInteger","SortVisualization","barsArray","setBarsArray","progressionIndex","setProgressionIndex","startedVisualization","setStartedVisualization","actionsList","setActionsList","setAnimSpeed","setSlimMode","useEffect","setTimeout","currentAction","cleanUpPreviousAction","processAction","oldV","index","newBars","idx","newBar","data","oldArray","newArray","bar","JSON","stringify","action","indexOne","indexTwo","Error","Fragment","visualization","map","MainContent","Backdrop","navIsOpen","backdrop","handleBackdropClicked","Sidebar","isOpen","setIsOpen","handleSidebarBtn","handleNavSelection","algo","handleAlgoSelection","buttonClass","sideBarClass","sidebar","button","Object","keys","activeAlgorithm","active","App","setAlgorithm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80f9fa25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"SortActionMenuItems_content__1yTUG\",\"btn\":\"SortActionMenuItems_btn__WW2FO\",\"slider__container\":\"SortActionMenuItems_slider__container__evPhO\",\"slider\":\"SortActionMenuItems_slider__3XEL-\",\"input-group\":\"SortActionMenuItems_input-group__3bAtu\",\"divisor\":\"SortActionMenuItems_divisor__1C6Dn\",\"input-message\":\"SortActionMenuItems_input-message__sm8gN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2CStI\",\"sidebar__open\":\"Sidebar_sidebar__open__tmhBA\",\"active\":\"Sidebar_active__1OkKG\",\"button\":\"Sidebar_button__31CFv\",\"button-icon\":\"Sidebar_button-icon__2mlUQ\",\"button-icon__close\":\"Sidebar_button-icon__close__1Lj7D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Bar_content__US550\",\"slim-mode__light\":\"Bar_slim-mode__light__XuEWL\",\"slim-mode__medium\":\"Bar_slim-mode__medium__2yLUP\",\"slim-mode__heavy\":\"Bar_slim-mode__heavy__I3axX\",\"slim-mode__heavier\":\"Bar_slim-mode__heavier__1_PIy\",\"slim-mode__heaviest\":\"Bar_slim-mode__heaviest__2qv0l\",\"bar__idle\":\"Bar_bar__idle__2kAnc\",\"bar__compare\":\"Bar_bar__compare__25icv\",\"bar__swap_init\":\"Bar_bar__swap_init__3mAC2\",\"bar__swap_end\":\"Bar_bar__swap_end__1WSFz\",\"bar__final_pos\":\"Bar_bar__final_pos__3UibF\",\"bar__qks_set_pivot\":\"Bar_bar__qks_set_pivot__1RRYs\",\"bar__qks_limits\":\"Bar_bar__qks_limits__1SdvY\",\"bar__mgs_replace\":\"Bar_bar__mgs_replace__3xPAB\",\"number\":\"Bar_number__joLYt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__NE70o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-content\":\"MainContent_main-content__t31-i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visualization\":\"SortVisualization_visualization__2lxXD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"action-menu\":\"ActionMenu_action-menu__1woVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__1D3-D\"};","import React from \"react\";\r\nimport classes from \"./Bar.module.css\"\r\n\r\nconst Bar = (props) => {\r\n    const heightModifier = 5;\r\n\r\n    const getBarClass = (barState) => {\r\n        return classes[`bar__${barState.toLowerCase()}`];\r\n\r\n    }\r\n\r\n    console.log(props.slimMode);\r\n\r\n    let numberContainer = (\r\n        <div className={classes.number}>\r\n            {props.height}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={` ${classes.content} ${props.slimMode ? classes['slim-mode__' + props.slimMode] : ''} `}>\r\n            <div className={getBarClass(props.barState)} style={{height: props.height * heightModifier + \"px\"}}>\r\n                &nbsp;\r\n            </div>\r\n            {props.slimMode ? '' : numberContainer}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bar;","export const IDLE = 'idle';\r\nexport const COMPARE = 'compare';\r\nexport const QKS_SET_PIVOT = 'qks_set_pivot';\r\nexport const QKS_UNSET_PIVOT = 'qks_unset_pivot';\r\nexport const QKS_LIMITS = 'qks_limits';\r\nexport const MGS_REPLACE = 'mgs_replace';\r\nexport const SWAP_INIT = 'swap_init';\r\nexport const SWAP_END = 'swap_end';\r\nexport const FINAL_POS = 'final_pos';\r\n","import {\r\n    COMPARE,\r\n    FINAL_POS, MGS_REPLACE,\r\n    QKS_LIMITS,\r\n    QKS_SET_PIVOT,\r\n    QKS_UNSET_PIVOT,\r\n    SWAP_END,\r\n    SWAP_INIT\r\n} from \"./sortingStates\";\r\n\r\nexport const bubbleSort = (array) => {\r\n    const arrayCopy = [...array];\r\n    let actions = [];\r\n\r\n    for (let i = 0; i < arrayCopy.length - 1; i++) {\r\n        let j;\r\n        for (j = 0; j < arrayCopy.length - i - 1; j++) {\r\n            actions.push(createAction(COMPARE, j, j + 1));\r\n            if (arrayCopy[j].num > arrayCopy[j + 1].num) {\r\n                actions.push(createAction(SWAP_INIT, j, j + 1));\r\n                swap(arrayCopy, j, j + 1);\r\n                actions.push(createAction(SWAP_END, j, j + 1));\r\n            }\r\n\r\n        }\r\n        actions.push(createAction(FINAL_POS, j));\r\n    }\r\n\r\n    actions.push(createAction(FINAL_POS, 0));\r\n\r\n    return actions;\r\n\r\n}\r\n\r\nexport const selectionSort = (array) => {\r\n    const arrayCopy = [...array];\r\n    let actions = [];\r\n\r\n    let i;\r\n    for (i = 0; i < arrayCopy.length; i++) {\r\n        let minIdx = i;\r\n        for (let j = i; j < arrayCopy.length; j++) {\r\n\r\n            actions.push(createAction(COMPARE, minIdx, j));\r\n            if (arrayCopy[j].num < arrayCopy[minIdx].num) {\r\n                minIdx = j;\r\n            }\r\n        }\r\n        if (minIdx !== i) {\r\n            actions.push(createAction(SWAP_INIT, minIdx, i));\r\n            swap(arrayCopy, minIdx, i);\r\n            actions.push(createAction(SWAP_END, minIdx, i));\r\n            actions.push(createAction(FINAL_POS, i));\r\n\r\n        } else {\r\n            actions.push(createAction(FINAL_POS, i));\r\n        }\r\n    }\r\n\r\n    return actions;\r\n}\r\n\r\nexport const insertionSort = (array) => {\r\n    const arrayCopy = [...array];\r\n    const actions = [];\r\n    let j, i;\r\n    actions.push(createAction(FINAL_POS, 0));\r\n    for (i = 1; i < arrayCopy.length; i++) {\r\n        let tempObj = arrayCopy[i];\r\n        for (j = i - 1; j >= 0 && arrayCopy[j].num > tempObj.num; j--) {\r\n            actions.push(createAction(SWAP_INIT, j + 1, j));\r\n            arrayCopy[j + 1] = arrayCopy[j];\r\n            actions.push(createAction(SWAP_END, j + 1, j));\r\n        }\r\n        actions.push(createAction(FINAL_POS, j + 1));\r\n        arrayCopy[j + 1] = tempObj;\r\n    }\r\n//\r\n    actions.push(createAction(FINAL_POS, i - 1));\r\n\r\n    return actions;\r\n}\r\n\r\nexport const quickSort = (array) => {\r\n\r\n\r\n    const arrayCopy = [...array];\r\n    // const arrayCopy = [44,64,46,36];\r\n    const actions = [];\r\n    quickSortEntry(arrayCopy, 0, arrayCopy.length - 1, actions);\r\n    return actions;\r\n\r\n\r\n}\r\n\r\nconst quickSortEntry = (array, lowPtr, highPtr, actions) => {\r\n    if (lowPtr < highPtr) {\r\n        const pivotIdx = partitionQkSort(array, lowPtr, highPtr, actions);\r\n        actions.push(createAction(QKS_UNSET_PIVOT, pivotIdx));\r\n        actions.push(createAction(FINAL_POS, pivotIdx));\r\n        quickSortEntry(array, lowPtr, pivotIdx - 1, actions);\r\n        quickSortEntry(array, pivotIdx + 1, highPtr, actions);\r\n\r\n    } else if (lowPtr === highPtr) {\r\n        console.log(`LOWPTR: ${lowPtr}, HIGHPTR: ${highPtr}`);\r\n        actions.push(createAction(FINAL_POS, lowPtr));\r\n    }\r\n}\r\n\r\nconst partitionQkSort = (array, lowPtr, highPtr, actions) => {\r\n    const pivot = array[highPtr].num;\r\n    actions.push(createAction(QKS_SET_PIVOT, highPtr));\r\n    let i = lowPtr;\r\n    let j = highPtr;\r\n\r\n    actions.push(createAction(QKS_LIMITS, i));\r\n\r\n    while (i < j) {\r\n        while (array[i].num < pivot) {\r\n            i++;\r\n\r\n            if (j !== highPtr) {\r\n                actions.push(createAction(QKS_LIMITS, i, j));\r\n            } else {\r\n                actions.push(createAction(QKS_LIMITS, i));\r\n            }\r\n        }\r\n\r\n        while (array[j].num >= pivot && j > lowPtr) {\r\n            j--;\r\n            if (i < j) {\r\n                actions.push(createAction(QKS_LIMITS, i, j));\r\n            }\r\n\r\n        }\r\n\r\n        if (i < j) {\r\n            actions.push(createAction(SWAP_INIT, i, j));\r\n            swap(array, i, j);\r\n            actions.push(createAction(SWAP_END, i, j));\r\n        }\r\n    }\r\n\r\n    actions.push(createAction(SWAP_INIT, i, highPtr));\r\n    swap(array, i, highPtr);\r\n    actions.push(createAction(SWAP_END, i, highPtr));\r\n    return i;\r\n\r\n\r\n}\r\n\r\nexport const mergeSort = (array) => {\r\n\r\n    const arrayCopy = [...array];\r\n    const actions = [];\r\n    // const arrayCopy = [3, 7, 1, 9, 13, 43, 5, 2, 15, 12, 20, 21, 22, 30, 29, 26, 41, 69, 99, 91, 90, 54];\r\n    // const arrayCopy = [7, 3, 1, 9, 13, 43, 5];\r\n    // const arrayCopy = [1,2,3,4,5];\r\n    // const arrayCopy = [5,4,3,2,1];\r\n    // console.log(`Original Array: ${JSON.stringify(arrayCopy)}`);\r\n    mergeSortEntry(arrayCopy, 0, arrayCopy.length - 1, actions);\r\n    // console.log(`Sorted Array: ${JSON.stringify(arrayCopy)}`);\r\n\r\n    // console.log(JSON.stringify(actions));\r\n    return actions;\r\n\r\n}\r\n\r\nconst mergeSortEntry = (array, lowIdx, highIdx, actions) => {\r\n    if (lowIdx >= highIdx) {\r\n        return;\r\n    }\r\n    const middleIdx = Math.floor(lowIdx + ((highIdx - lowIdx) / 2));\r\n\r\n    mergeSortEntry(array, lowIdx, middleIdx, actions);\r\n    mergeSortEntry(array, middleIdx + 1, highIdx, actions);\r\n    merge(array, lowIdx, middleIdx, highIdx, actions);\r\n}\r\n\r\nconst merge = (array, lowIdx, middleIdx, highIdx, actions) => {\r\n    const tempArr = [];\r\n\r\n    let leftIdx = lowIdx;\r\n    let rightIdx = middleIdx + 1;\r\n\r\n\r\n    while (leftIdx <= middleIdx && rightIdx <= highIdx) {\r\n        console.log(`left idx : ${leftIdx}, rightIdx: ${rightIdx}`);\r\n        actions.push(createAction(COMPARE, leftIdx, rightIdx));\r\n        if (array[leftIdx].num < array[rightIdx].num) {\r\n            tempArr.push(array[leftIdx]);\r\n            leftIdx++;\r\n\r\n        } else {\r\n            tempArr.push(array[rightIdx]);\r\n            rightIdx++;\r\n        }\r\n    }\r\n\r\n    while (leftIdx <= middleIdx) {\r\n        tempArr.push(array[leftIdx]);\r\n        leftIdx++;\r\n    }\r\n\r\n    while (rightIdx <= highIdx) {\r\n        tempArr.push(array[rightIdx]);\r\n        rightIdx++;\r\n    }\r\n\r\n\r\n    for (let i = 0, mainArrIdx = lowIdx; i < tempArr.length; i++, mainArrIdx++) {\r\n        console.log(`I: ${i}, MAINARRIDX: ${mainArrIdx}`);\r\n        array[mainArrIdx] = tempArr[i];\r\n        actions.push(createAction(MGS_REPLACE, tempArr[i], mainArrIdx));\r\n\r\n        if(lowIdx === 0 && highIdx === array.length - 1) {\r\n            actions.push(createAction(FINAL_POS, mainArrIdx));\r\n        }\r\n    }\r\n}\r\n\r\nconst createAction = (actionType, ...args) => {\r\n\r\n    if (actionType === MGS_REPLACE) {\r\n        return {\r\n            actionType: actionType,\r\n            replacer: args[0],\r\n            indexes: args.slice(1)\r\n        }\r\n    } else {\r\n        return {\r\n            actionType,\r\n            indexes: [...args]\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst swap = (array, idxOne, idxTwo) => {\r\n\r\n\r\n    if (idxOne === idxTwo)\r\n        return;\r\n\r\n    let temp = array[idxOne];\r\n    array[idxOne] = array[idxTwo];\r\n    array[idxTwo] = temp;\r\n\r\n}","import {IDLE} from \"./sortingStates\";\r\nimport {bubbleSort, insertionSort, mergeSort, quickSort, selectionSort} from \"./sorter\";\r\n\r\nexport const createArrayOfBars = (size, minV, maxV, customNums) => {\r\n    const MIN =  1;\r\n    const MAX =  99;\r\n    let arr = [];\r\n    let newArrayLength = size;\r\n\r\n    if(customNums) {\r\n        for (let i = 0; i < customNums.length; i++) {\r\n            arr.push(createBar(i, customNums[i], IDLE, IDLE));\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    if(minV && maxV) {\r\n        newArrayLength = Math.floor((Math.random() * (maxV - minV + 1)) + minV);\r\n\r\n    }\r\n\r\n    for (let i = 0; i < newArrayLength; i++) {\r\n        let randNum = Math.floor((Math.random() * (MAX - MIN + 1)) + MIN);\r\n        arr.push(createBar(i, randNum, IDLE, IDLE));\r\n    }\r\n    return arr;\r\n\r\n}\r\n\r\nexport const algorithms = {\r\n    BUBBLE: {code: 0, name: 'Bubble', func: bubbleSort},\r\n    SELECTION: {code: 1, name: 'Selection', func: selectionSort},\r\n    INSERTION: {code: 2, name: 'Insertion', func: insertionSort},\r\n    QUICKSORT: {code: 3, name: 'Quick', func: quickSort},\r\n    MERGESORT: {code: 4, name: 'Merge', func: mergeSort}\r\n\r\n}\r\n\r\nexport const createBar = (key, num, curState, revState) => {\r\n\r\n    return {\r\n        key,\r\n        num,\r\n        curState,\r\n        revState\r\n    }\r\n\r\n}","import classes from \"./ActionMenu.module.css\"\r\nimport React from \"react\";\r\n\r\nconst ActionMenu = (props) => {\r\n\r\n    return (\r\n        <div className={classes['action-menu']}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default ActionMenu;","import React, {useState} from \"react\";\r\nimport classes from \"./SortActionMenuItems.module.css\";\r\nimport {createArrayOfBars} from \"../../../util/utils\";\r\n\r\nconst MINIMUM = 1;\r\nconst MAXIMUM = 300;\r\n\r\nconst SortActionMenuItems = (props) => {\r\n\r\n    const [showingMain, setShowingMain] = useState(true);\r\n    const [minInputVal, setMinInputVal] = useState(10);\r\n    const [maxInputVal, setMaxInputVal] = useState(20);\r\n    const [customArrItems, setCustomArrItems] = useState(\"1,2,3,4,5\");\r\n    const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n\r\n    const handleReturnBtn = () => {\r\n        setShowingMain(true);\r\n    }\r\n\r\n    const handleCreateArrayBtn = () => {\r\n        setShowingMain(false);\r\n    }\r\n\r\n    const handleNewRandomArrayBtn = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        props.handleNewArray(createArrayOfBars(null, minInputVal, maxInputVal, null));\r\n\r\n\r\n    }\r\n\r\n    const handleSliderChange = (evt) => {\r\n        console.log(evt.target.value);\r\n        props.handleSpeedChange(evt.target.value);\r\n\r\n    }\r\n\r\n    const handleInputChange = (args, evt) => {\r\n        const val = +evt.target.value;\r\n        const type = args.t;\r\n        const func = args.f;\r\n\r\n        if (type === \"min\" && val > maxInputVal && val <= MAXIMUM) {\r\n            setMaxInputVal(val);\r\n            func(val);\r\n        } else if (type === \"max\" && val < minInputVal && val >= MINIMUM) {\r\n            setMinInputVal(val)\r\n            func(val);\r\n        } else if (val < MINIMUM) {\r\n            func(MINIMUM);\r\n        } else if (val > MAXIMUM) {\r\n            func(MAXIMUM);\r\n        } else {\r\n            func(val);\r\n        }\r\n    }\r\n\r\n    const handleCustomChange = (evt) => {\r\n        setCustomArrItems(evt.target.value);\r\n    }\r\n\r\n    const validateCustomArr = (evt) => {\r\n        evt.preventDefault();\r\n        setErrorMsg(\"\");\r\n        let error = false;\r\n\r\n        const splitItems = customArrItems.split(\",\");\r\n        const finalItems = [];\r\n        splitItems.forEach(item => {\r\n            if(item === '') {\r\n                setErrorMsg( \"Erroneous input (extra comma perhaps).\");\r\n                error = true;\r\n            }\r\n            const number = +item;\r\n            console.log(`Item: ${item}, Number: ${number}`);\r\n            console.log(Number.isInteger(+item));\r\n            if(!Number.isInteger(number) || number > MAXIMUM || number < MINIMUM) {\r\n                setErrorMsg(\"Enter only numbers between 1-100 inclusive.\");\r\n                error = true;\r\n            }\r\n\r\n            finalItems.push(number);\r\n\r\n        });\r\n\r\n        if(finalItems.length > MAXIMUM) {\r\n            setErrorMsg(\"Minimum amount of numbers is 1 and maximum is 300.\");\r\n            error = true;\r\n        }\r\n\r\n        if(!error) {\r\n            props.handleNewArray(createArrayOfBars(null, null, null, finalItems));\r\n        }\r\n    }\r\n\r\n    let mainContent = (<div className={classes.content}>\r\n        {props.algorithm.name}\r\n        <button className={classes.btn} onClick={props.sort}>Sort</button>\r\n        <button onClick={handleCreateArrayBtn} className={classes.btn}>Create Array</button>\r\n        <div className={classes['slider__container']}>\r\n            <p>Fast</p>\r\n            <input onChange={handleSliderChange} className={classes.slider} type={\"range\"} step={\"10\"}\r\n                   min={\"1\"} max={\"1000\"} value={props.animSpeed}/>\r\n            <p>Slow</p>\r\n        </div>\r\n    </div>);\r\n\r\n    let createArraySubContent = (\r\n        <div className={classes.content}>\r\n            <form className={`${classes['input-group']} ${classes.divisor}`}>\r\n                <label htmlFor={\"min\"}>Min Items: </label>\r\n                <input value={minInputVal} onChange={handleInputChange.bind(null, {t: \"min\", f: setMinInputVal})}\r\n                       name={\"min\"} id={\"min\"} type={\"number\"} min={`${MINIMUM}`} max={`${MAXIMUM}`}\r\n                       defaultValue={\"10\"}/>\r\n                <label htmlFor={\"max\"}>Max Items: </label>\r\n                <input value={maxInputVal} onChange={handleInputChange.bind(null, {t: \"max\", f: setMaxInputVal})}\r\n                       name={\"max\"} id={\"max\"} type={\"number\"} min={`${MINIMUM}`} max={`${MAXIMUM}`}\r\n                       defaultValue={\"20\"}/>\r\n                <button onClick={handleNewRandomArrayBtn} type={\"submit\"} className={classes.btn}>New Random Array\r\n                </button>\r\n            </form>\r\n            <form className={`${classes['input-group']} ${classes.divisor}`}>\r\n                <label htmlFor={\"nums\"}>Items: </label>\r\n                <input id={\"nums\"} name={\"nums\"} type={\"text\"} value={customArrItems} onChange={handleCustomChange}/>\r\n                <button className={classes.btn} type={\"submit\"} onClick={validateCustomArr}>Create Custom Array</button>\r\n            </form>\r\n            <button onClick={handleReturnBtn} className={`${classes.btn}`}>Return</button>\r\n            <div className={classes['input-message']}>\r\n                {errorMsg}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        showingMain ? mainContent : createArraySubContent\r\n    );\r\n}\r\n\r\nexport default SortActionMenuItems;","import React, {useEffect, useState} from \"react\";\r\nimport classes from \"./SortVisualization.module.css\"\r\nimport Bar from \"./Bar/Bar\";\r\nimport {createArrayOfBars} from \"../../util/utils\";\r\nimport ActionMenu from \"../ActionMenu/ActionMenu\";\r\nimport {\r\n    COMPARE,\r\n    FINAL_POS,\r\n    IDLE, MGS_REPLACE,\r\n    QKS_LIMITS,\r\n    QKS_SET_PIVOT,\r\n    QKS_UNSET_PIVOT,\r\n    SWAP_END,\r\n    SWAP_INIT\r\n} from \"../../util/sortingStates\";\r\nimport SortActionMenuItems from \"./SortActionMenuItems/SortActionMenuItems\";\r\nimport {quickSort} from \"../../util/sorter\";\r\n\r\nconst SortVisualization = (props) => {\r\n\r\n    const [barsArray, setBarsArray] = useState([]);\r\n    const [progressionIndex, setProgressionIndex] = useState(0);\r\n    const [startedVisualization, setStartedVisualization] = useState(false);\r\n    const [actionsList, setActionsList] = useState([]);\r\n    const [animSpeed, setAnimSpeed] = useState(500);\r\n    const [slimMode, setSlimMode] = useState('');\r\n\r\n    useEffect(() => {\r\n        setBarsArray(createArrayOfBars(20));\r\n\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if (startedVisualization && progressionIndex < actionsList.length) {\r\n\r\n            setTimeout(() => {\r\n                const currentAction = actionsList[progressionIndex];\r\n                cleanUpPreviousAction(progressionIndex);\r\n                processAction(currentAction);\r\n                setProgressionIndex(oldV => oldV + 1);\r\n\r\n\r\n            }, animSpeed)\r\n        } else if (startedVisualization) {\r\n            setStartedVisualization(false);\r\n        }\r\n\r\n    }, [startedVisualization, progressionIndex, actionsList])\r\n\r\n    const cleanUpPreviousAction = (index) => {\r\n        const newBars = [];\r\n\r\n        if (index === 0 || actionsList[index - 1].actionType === FINAL_POS) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < actionsList[index - 1].indexes.length; i++) {\r\n            if (actionsList[index - 1].indexes[i] !== actionsList[index].indexes[i]) {\r\n                console.log(`idx for newbar: ${actionsList[index - 1].indexes[i]}`);\r\n                const idx = actionsList[index - 1].indexes[i];\r\n                let newBar = barsArray[idx];\r\n                newBar = {idx, data: {...newBar, curState: newBar.revState}};\r\n                newBars.push(newBar);\r\n            }\r\n        }\r\n\r\n        if (newBars.length !== 0) {\r\n            setBarsArray(oldArray => {\r\n                const newArray = [...oldArray];\r\n                for (const bar of newBars) {\r\n                    console.log(`NEW BAR REPLACEMENT: ${JSON.stringify(bar)}`);\r\n                    newArray[bar.idx] = bar.data;\r\n                }\r\n\r\n                return newArray;\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const processAction = (action) => {\r\n        const actionType = action.actionType;\r\n        // const indexOne = action.idxOne;\r\n        // const indexTwo = action.idxTwo;\r\n        const indexes = action.indexes;\r\n\r\n        switch (actionType) {\r\n            case COMPARE:\r\n            case SWAP_INIT:\r\n            case QKS_LIMITS:\r\n                setBarsArray((oldArray) => {\r\n                    const newArray = [...oldArray];\r\n                    for (const idx of indexes) {\r\n                            newArray[idx] = {...newArray[idx], curState: actionType};\r\n\r\n                    }\r\n\r\n                    return newArray;\r\n                });\r\n\r\n                break;\r\n\r\n            case QKS_SET_PIVOT:\r\n                setBarsArray(oldArray => {\r\n                    const newArray = [...oldArray];\r\n                    newArray[indexes[0]] = {...newArray[indexes[0]], curState: actionType, revState: actionType};\r\n\r\n                    return newArray;\r\n                });\r\n\r\n                break;\r\n\r\n            case QKS_UNSET_PIVOT:\r\n                setBarsArray(oldArray => {\r\n                    const newArray = [...oldArray];\r\n                    newArray[indexes[0]] = {...oldArray[indexes[0]], curState: IDLE, revState: IDLE};\r\n\r\n                    return newArray;\r\n                });\r\n\r\n                break;\r\n\r\n            case MGS_REPLACE:\r\n                setBarsArray(oldArray => {\r\n                    const newArray = [...oldArray];\r\n\r\n                    // console.log(`REPLACER IS: ${JSON.stringify(action.replacer)}`)\r\n                    newArray[indexes[0]] = {...newArray[indexes[0]], num: action.replacer.num, curState: actionType};\r\n\r\n\r\n\r\n                    return newArray;\r\n                });\r\n\r\n                break;\r\n\r\n            case FINAL_POS:\r\n                setBarsArray(oldArray => {\r\n                    const newArray = [...oldArray];\r\n                    newArray[indexes[0]] = {...newArray[indexes[0]], curState: actionType, revState: FINAL_POS};\r\n\r\n                    return newArray;\r\n                })\r\n\r\n                break;\r\n\r\n            case SWAP_END:\r\n                setBarsArray((oldArray) => {\r\n                    const indexOne = indexes[0], indexTwo = indexes[1];\r\n                    const newArray = [...oldArray];\r\n                    const temp = {...newArray[indexOne]};\r\n                    newArray[indexOne] = {...newArray[indexTwo]};\r\n                    newArray[indexTwo] = temp;\r\n\r\n                    return newArray\r\n                });\r\n                break;\r\n\r\n\r\n            default:\r\n                throw new Error('Default case processing action.');\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const sort = () => {\r\n        setActionsList(props.algorithm.func((barsArray)));\r\n        setStartedVisualization(true);\r\n\r\n\r\n    }\r\n\r\n    const handleNewArray = (array) => {\r\n        setStartedVisualization(false);\r\n        setProgressionIndex(0);\r\n        setSlimMode(() => {\r\n            if(array.length <= 50) {\r\n                return '';\r\n            } else if (array.length <= 80) {\r\n                return 'light';\r\n            } else if (array.length <= 140) {\r\n                return 'medium';\r\n            } else if (array.length <= 240) {\r\n                return 'heavy';\r\n            } else if (array.length <= 300) {\r\n                return 'heavier';\r\n            } else {\r\n                return 'heaviest';\r\n            }\r\n        });\r\n        setBarsArray(array);\r\n\r\n    }\r\n\r\n    const handleSpeedChange = (val) => {\r\n        setAnimSpeed(val);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n            <div className={classes.visualization}>\r\n                {barsArray.map(item => {\r\n                    return <Bar slimMode={slimMode} barState={item.curState} key={item.key} height={item.num}/>\r\n                })}\r\n            </div>\r\n            <ActionMenu>\r\n                <SortActionMenuItems animSpeed={animSpeed} handleSpeedChange={handleSpeedChange}\r\n                                     algorithm={props.algorithm} sort={sort} handleNewArray={handleNewArray}/>\r\n            </ActionMenu>\r\n        </React.Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SortVisualization;","import React from \"react\";\r\nimport classes from \"./MainContent.module.css\"\r\nimport SortVisualization from \"../SortVisualization/SortVisualization\";\r\n\r\nconst MainContent = (props) => {\r\n\r\n    return (\r\n        <div className={classes['main-content']}>\r\n            <SortVisualization algorithm={props.algorithm}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainContent;","import React from \"react\";\r\nimport classes from \"./Backdrop.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n\r\n    return (\r\n        props.navIsOpen ? <div className={classes.backdrop} onClick={props.handleBackdropClicked}/> : null\r\n    );\r\n}\r\n\r\nexport default Backdrop;","import React, {useState} from \"react\";\r\nimport classes from \"./Sidebar.module.css\";\r\nimport {algorithms} from \"../../util/utils\";\r\nimport Backdrop from \"./Backdrop/Backdrop\";\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const handleSidebarBtn = () => {\r\n        setIsOpen(oldV => !oldV);\r\n\r\n    }\r\n\r\n    const handleNavSelection = (algo) => {\r\n        setTimeout(() => handleSidebarBtn(), 250);\r\n        props.handleAlgoSelection(algo);\r\n\r\n    }\r\n\r\n    let buttonClass = isOpen ? `${classes['button-icon']} ${classes['button-icon__close']}` : classes['button-icon'];\r\n    let sideBarClass = isOpen ? `${classes.sidebar} ${classes['sidebar__open']}` : classes.sidebar;\r\n\r\n    const handleBackdropClicked = () => {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Backdrop navIsOpen={isOpen} handleBackdropClicked={handleBackdropClicked}/>\r\n            <div onClick={handleSidebarBtn} className={classes.button}>\r\n                <div className={buttonClass}>\r\n                    >\r\n                </div>\r\n            </div>\r\n            <div className={sideBarClass}>\r\n                <nav>\r\n                    <ul>\r\n                        <h3>Sorting Algorithms</h3>\r\n\r\n                        {Object.keys(algorithms).map(\r\n                            value => <li key={algorithms[value].code} className={props.activeAlgorithm.code === algorithms[value].code ? classes.active : ''}\r\n                                         onClick={handleNavSelection.bind(null, algorithms[value])}>{algorithms[value].name} Sort</li>\r\n                        )}\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import classes from \"./App.module.css\";\nimport MainContent from \"./components/MainContent/MainContent\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport {useState} from \"react\";\nimport {algorithms} from \"./util/utils\";\n\nfunction App() {\n\n    const [algorithm, setAlgorithm] = useState(algorithms.MERGESORT);\n\n    const handleAlgoSelection = (algorithm) => {\n        console.log(algorithm)\n        setAlgorithm(algorithm);\n\n    }\n\n    return (\n        <div className={classes.content}>\n            <Sidebar activeAlgorithm={algorithm} handleAlgoSelection={handleAlgoSelection}/>\n            <MainContent algorithm={algorithm}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}